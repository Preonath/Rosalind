# ЁЯМ╗ ржлрж╛ржЗрж▓рзЗ ржерж╛ржХрж╛ рж╕рж┐ржХрзБрзЯрзЗржирзНрж╕ ржЧрзБрж▓рж╛ржХрзЗ рж▓рж┐рж╕рзНржЯ ржП ржирж┐рзЯрзЗ рж╕рзЗржЯрж╛ржХрзЗ ржПржХржЯрж╛ ржлрж╛ржВрж╢ржирзЗ ржкрж╛рж╕ ржХрж░рж╕рзЗ, рж╕рж╛ржерзЗ ржЖрж░рзЗржХржЯрж╛ ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржкрж╛рж╕ ржХрж░рж╕рзЗ bbb=' '...bbb ржЯрж╛ ржЖржорж╛ржжрзЗрж░ ржЖрж▓рзНржЯрж┐ржорзЗржЯ ржЯрзЛржЯрж╛рж▓ ржХржиржЯрж┐ржЧ ржЯрж╛ рж╣ржмрзЗ ржЖрж░ ржХрж┐ред



# ЁЯМ╗ ржлрж╛ржВрж╢ржирзЗрж░ ржнрж┐рждрж░рзЗ ржврзБржХрж╛рж░ ржкрж░ рж╢рзБрж░рзБрждрзЗ ржЪрзЗржХ ржХрж░ржмрзЗ, list length 0 ржХрж┐-ржирж╛ред 0 рж╣ржУрзЯрж╛ ржорж╛ржирзЗ рж▓рж┐рж╕рзНржЯрзЗ ржЖрж░ ржХрж┐ржЫрзБ ржирж╛ржЗред ржПржЯрж╛ рж╣ржмрзЗ ржХрж╛ржЬ рж╢рзЗрж╖ рж╣рзЯрзЗ ржпрж╛ржмрзЗ ржпржЦржиред bbb ржХрзЗ рж░рзЗржЬрж╛рж▓рзНржЯ рж╣рж┐рж╕рзЗржмрзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗ ржжрж┐ржмрзЗ

# ЁЯМ╗ рждрж╛рж░ржкрж░ ржЪрзЗржХ ржХрж░рж╕рзЗ bbb ржнрзНржпрж╛рж▓рзБржЯрж╛ ржлрж╛ржБржХрж╛ ржХрж┐ ржирж╛ред ржпржЦржи ржкрзНрж░ржержоржмрж╛рж░ ржлрж╛ржВрж╢ржирзЗ ржврзБржХржмрзЗ рж╢рзБржзрзБ рждржЦржи bbb=' ' ржерж╛ржХржмрзЗред ржХржирзНржбрж┐рж╢ржирзЗрж░ ржнрж┐рждрж░рзЗ ржврзБржХржмрзЗ, рж▓рж┐рж╕рзНржЯрзЗрж░ ржкрзНрж░ржержо ржпрзЗржЗ ржнрзНржпрж╛рж▓рзБ ржЯрж╛ рж╕рзЗржЯрж╛ржХрзЗ bbb ржПрж░ ржнрзНржпрж╛рж▓рзБ рж╣рж┐рж╕рзЗржмрзЗ рж╕рзЗржЯ ржХрж░ржмрзЗред ржЖржмрж╛рж░ рж░рж┐ржХрж╛рж░рзНрж╢ржирзЗрж░ ржорждрзЛ рж╕рзЗржЗржо ржлрж╛ржВрж╢ржиржХрзЗ ржХрж▓ ржХрж░ржмрзЗред ржХрж┐ржирзНрждрзБ ржПржЦржи ржЖрж░ bbb ржПрж░ ржнрзНржпрж╛рж▓рзБ ржлрж╛ржБржХрж╛ ржирж╛ред


# ЁЯМ╗ рж╕рзЗржХрзЗржирзНржб ржмрж╛рж░ ржпржЦржи ржлрж╛ржВрж╢ржи ржЯрж╛ ржХрж▓ рж╣ржмрзЗ рждржЦржи bbb ржПрж░ ржПржХржЯрж╛ ржнрзНржпрж╛рж▓рзБ ржЖржЫрзЗред рждрж╛ржЗ рж╕рзЗ else ржП ржврзБржХржмрзЗред рж╕рзЗржЦрж╛ржирзЗ рж▓рж┐рж╕рзНржЯрзЗрж░  ржкрзНрж░рждрзНржпрзЗржХржЯрж╛ рж╕рж┐ржХрзБрзЯрзЗржирзНрж╕ ржПрж░ ржЬржирзНржп рж╕рзЗ ржЪрзЗржХ ржХрж░ржмрзЗ ржУржЗ рж╕рж┐ржХрзБрзЯрзЗржирзНрж╕ ржПрж░ рж╢рзБрж░рзБрж░ ржмрж╛ рж╢рзЗрж╖рзЗрж░ ржХрзЛржирзЛ ржкрж╛рж░рзНржЯ ржжрж┐рзЯрзЗ bbb рж╢рзБрж░рзБ ржмрж╛ рж╢рзЗрж╖ рж╣ржЗрж╕рзЗ ржХрж┐-ржирж╛ред ржорж╛ржирзЗ ржХржиржЯрж┐ржЧ ржпрзЗржнрж╛ржмрзЗ ржЦрзБржБржЬрзЗ ржЖрж░ ржХрж┐ред ржпржжрж┐ рж╢рзБрж░рзБ ржмрж╛ рж╢рзЗрж╖ рж╣рзЯ рждрж╛рж╣рж▓рзЗ ржжрзБржЗржЯрж╛ рж░рж┐ржб ржПрж░ ржХрзЗ ржПржб ржХрж░рзЗ ржирждрзБржи ржХржиржЯрж┐ржЧ, ржорж╛ржирзЗ ржирждрзБржи bbb ржПрж░ ржнрзНржпрж╛рж▓рзБ ржжрж┐ржмрзЗред ржЖрж░ ржУржЗ рж░рж┐ржб ржЯрж╛ржХрзЗ рж╕рж┐ржХрзБрзЯрзЗржирзНрж╕ рж▓рж┐рж╕рзНржЯ ржерзЗржХрзЗ рж░рж┐ржорзБржн ржХрж░рзЗ ржжрж┐ржмрзЗред
#  рждрж╛рж░ржкрж░ ржирждрзБржи рж╕рж┐ржХрзБрзЯрзЗржирзНрж╕ рж▓рж┐рж╕рзНржЯ ржЖрж░ ржирждрзБржи bbb ржнрзНржпрж╛рж▓рзБ ржжрж┐рзЯрзЗ ржЖржмрж╛рж░ ржлрж╛ржВрж╢ржи рж░рж┐ржХрж╛рж░рзНрж╕рж┐ржнрж▓рж┐ ржХрж▓ рж╣ржмрзЗред

# ЁЯМ╗ else ржПрж░ ржнрж┐рждрж░рзЗ ржПржнрж╛ржмрзЗ рж▓рж┐рж╕рзНржЯрзЗрж░ ржкрзНрж░рждрзНржпрзЗржХржЯрж╛ рж░рж┐ржб ржХрзЗ ржЪрзЗржХ ржХрж░рж╛ рж╣рзЯред


from Bio import SeqIO
seq_list=[]
f=open("R25.fasta","r")
for record in SeqIO.parse(f,"fasta"):
    seq_list.append(str(record.seq))
def fn(seq_list, bbb=''):
    if (len(seq_list) == 0):
        return bbb

    elif (len(bbb) == 0):
        bbb = seq_list.pop(0)
        return fn(seq_list, bbb)

    else:
        for i in range(len(seq_list)):
            a = seq_list[i]
            for j in range(len(a) // 2):
                c = len(a) - j
                if bbb.startswith(a[j:]):
                    seq_list.pop(i)
                    return fn(seq_list, a[:j] + bbb)
                if bbb.endswith(a[:c]):
                    seq_list.pop(i)
                    return fn(seq_list, bbb + a[c:])
print(fn(seq_list))